trigger DeleteQuestion on Question__c (before delete) {
    //Deletes all the SkipConditions records related to the deleted questions.
    delete [SELECT Id FROM SkipCondition__c WHERE SourceQuestion__c in :trigger.oldMap.keySet()];

    //Get all the mappings related to the Deleted questions.
    QuestionMapping__c[] mapping = [SELECT Id, FieldApiName__c,SurveyMapping__r.ObjectApiName__c,Question__c FROM QuestionMapping__c WHERE Question__c in :trigger.oldMap.keySet()];
    Map<string,QuestionMapping__c[]> mappingByQuestionId = new Map<string,QuestionMapping__c[]>();
    for(QuestionMapping__c qM: mapping){
        QuestionMapping__c[] qMapList = mappingByQuestionId.get(qM.Question__c);
        if(qMapList == null){
            mappingByQuestionId.put(qM.Question__c, new QuestionMapping__c[]{qM});
        }else{
            qMapList.add(qM);
        }
    }
    for(Question__c q:trigger.old){
        boolean Error = false;
        QuestionMapping__c[] mappingList = mappingByQuestionId.get(q.Id);
        if(mappingList != null){
            for(QuestionMapping__c qM : mappingList){
                Schema.DescribeFieldResult fieldDescribe;
                try{
                    //This gets the object data and then the mapped field
                    fieldDescribe = Schema.getGlobalDescribe().get(qM.SurveyMapping__r.ObjectApiName__c).getDescribe().fields.getMap().get(qM.FieldApiName__c).getDescribe();
                }catch(System.NullPointerException ex){
                    // The object or field specified in the mapping object does not exist.
                    // This is inconsistent, since it references an unexisting field.
                    // However, since the field does not exist, it cannot be required, so we can delete it.

                    // It's worth to know there are restrictions on the app to avoid the instertion of a non existant object,
                    // but this incoherence could be generated by deleting an object or a field.
                }
                //If the Field is required and is not seted by it self then stop the delete of the question.
                if(fieldDescribe != null && !fieldDescribe.isNillable() && !fieldDescribe.isDefaultedOnCreate()){
                    q.AddError('This question is mapped to a required field and cannot be removed. Please remove the mapping from the Field Mapping tab before deleting this question.');
                    Error = true;
                    break;
                }
            }
        }
    }
    delete mapping;
}